/**
 * prolog functions
 **/

/** list contains X **/
member(X,[X|_]).
member(X,[_|L]) :- member(X,L).

/** check if the student has done all preconditions **/
allowed(STUDENTID,[]).
allowed(STUDENTID,[X|L]) :- r(STUDENTID,X,NOTE) , NOTE<5,allowed(STUDENTID,L).

passed(STUDENTID,ME) :- r(STUDENTID,ME,NOTE) , NOTE<5, findall(PRE, p(ME,PRE), BAG), allowed(STUDENTID,BAG).

failed(STUDENTID,ME) :- r(STUDENTID,ME,NOTE) , NOTE>4.

/** main clause **/
passedModule(STUDENTID,ME) :- findall(SUBME, c(ME,SUBME), BAG), checkSubmodules(STUDENTID,BAG), repeats(STUDENTID,3,BAG), passed(STUDENTID,ME).

/** checks if the student has passed all required modules **/
checkSubmodules(STUDENTID,[]).
checkSubmodules(STUDENTID,[X|L]) :- checkSubmodules(STUDENTID,L),passed(STUDENTID,X).

repeats(STUDENTID,_,[]).
repeats(STUDENTID,N,[X|L]) :- findall(NOTE, failed(STUDENTID, X), BAG), length(BAG, COUNT),COUNT<N, checkrepeats(STUDENTID, N,L, COUNT).

checkrepeats(STUDENTID,N,L,FAILSCOUNT) :- ((FAILSCOUNT < 2) -> repeats(STUDENTID,N,L);repeats(STUDENTID,2,L)).

/**
 * prolog data (like a databases)
 **/

/** module result from student **/
r(3483045, 1569691, 6).
r(3483045, 1569691, 5).
r(3483045, 1569691, 4).
r(3333333, 1569849, 2).
r(3333333, 1569847, 1).

r(3333333, 1569756, 2).
r(3333333, 1569757, 5).
r(3333333, 1569757, 5).
r(3333333, 1569757, 1).
r(3333333, 1569758, 5).
/** if this clause is included, sascha doesn't meet the requirements to pass the modul 1569756 Db&Rn
* because he then repeated 2 submodules in the module Db&Rn 2 times. **/
/** r(3333333, 1569758, 5). **/
r(3333333, 1569758, 2).

/** students **/
st(3483945, "Felix Wackernagel").
st(3333333, "Sascha Kath").

/** module preconditions **/
p(1569847,1569849).
p(1569848,1569850).
p(1569873,1569875).
p(1569874,1569876).

/** module components/submodules **/

/** Mathe 1 **/
c(1569846,1569847).
c(1569846,1569848).
/** Mathe 2 **/
c(1569872,1569873).
c(1569872,1569874).
/** Technische Grundlagen **/
c(1569889,1569890).
c(1569889,1569891).
/** Datenbanken und Rechnernetze**/
c(1569756,1569757).
c(1569756,1569758).

/** modules **/
me(1569691,"INF-B-210 Algorithmen und Datenstrukturen").
me(1569696,"INF-B-240 Programmierung").
me(1569701,"INF-B-270 Formale Systeme").
me(1569706,"INF-B-310 Softwaretechnologie").
me(1569711,"INF-B-260 Informations- und Kodierungstheorie").
me(1569716,"INF-B-330 Rechnerarchitektur").
me(1569721,"INF-B-380 Betriebssysteme und Sicherheit").
me(1569726,"INF-B-320 Softwaretechnologie-Projekt").
me(1569731,"INF-B-410 Einführung in die Medieninformatik").
me(1569736,"INF-B-420 Einführung in die Computergraphik").
me(1569746,"INF-B-3A0 Systemorientierte Informatik/ Hardware Software-Codesign").
me(1569756,"INF-B-370 Datenbanken und Rechnernetze").
me(1569757,"INF-B-370-1 Datenbanken").
me(1569758,"INF-B-370-2 Rechnernetze").
me(1569775,"INF-B-3B0 Intelligente Systeme").
me(1569798,"INF-B-290 Theoretische Informatik und Logik").
me(1569803,"INF-B-610 Allgemeine Qualifikation").
me(1569808,"INF-BA Bachelorarbeit").
me(1569813,"INF-B-230 Einführungspraktikum").
me(1569846,"INF-B-110 Einführung in die Mathematik für Informatiker").
me(1569847,"INF-B-110-1 Einführung in die Mathematik 1").
me(1569848,"INF-B-110-2 Einführung in die Mathematik 2").
me(1569849,"INF-B-110-1-VL Mathematik Vorleistung").
me(1569850,"INF-B-110-2-VL Mathematik Vorleistung").
me(1569862,"INF-B-420-1 Einführung in die Computergraphik").
me(1569864,"INF-B-420-2 Computergraphik Praktikum").
me(1569872,"INF-B-120 Mathematische Methoden für Informatiker").
me(1569873,"INF-B-120-1 Mathematische Methoden 1").
me(1569874,"INF-B-120-2 Mathematische Methoden 2").
me(1569875,"INF-B-120-1-VL Mathematik Vorleistung").
me(1569876,"INF-B-120-2-VL Mathematik Vorleistung").
me(1569889,"INF-B-390 Technische Grundlagen und Hardware-Praktikum").
me(1569890,"INF-B-390-1 Technische Grundlagen").
me(1569891,"INF-B-390-2 Hardware-Praktikum").
me(1569900,"Bachelor Informatik 2009").
me(2066555,"INF-B-510 Vertiefung").
me(2066560,"INF-B-520 Vertiefung zur Bachelorarbeit").